The 0-add_integer Module
=======================

Module to import to use ``add_integer``
This module defines an int addition function by returning the addition of its two arguments (a + b)

    >>> add_integer = __import__("0-add_integer").add_integer

    >>> add_integer(1, 2)
    3

    >>> add_integer(0)
    98

    >>> add_integer("je suis un string", 0)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(7.5, 0)
    7

    >>> add_integer(0, "je suis un string")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer(6.3, 8.5)
    14

    >>> add_integer(00050, 00100)
    Traceback (most recent call last):
    SyntaxError: leading zeros in decimal integer literals are not permitted; use an 0o prefix for octal integers

    >>> add_integer(10000000, 20000000)
    30000000

    >>> add_integer(1, 2, 3)
    Traceback (most recent call last):
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

    >>> add_integer([1, 2], [2, 1])
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2, [1, 2])
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer((2, 1), (2, 1))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(0, NaN)
    Traceback (most recent call last):
    NameError: name 'NaN' is not defined

    >>> add_integer(float('nan'), 2)
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
